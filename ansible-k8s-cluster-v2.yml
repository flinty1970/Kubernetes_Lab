---
- hosts: all
  become: true
  tasks:
  - name: Install dependencies for Docker
    yum:
      name: yum-utils
      state: present

  - name: Add Docker repository
    command: yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

  - name: Install Docker
    yum: 
      name: "{{ packages }}"
      state: present
    vars:
      packages:
      - docker-ce
      - docker-ce-cli 
      - containerd.io
    
  - name: Remove file /etc/containerd/config.toml
    ansible.builtin.file:
      path: /etc/containerd/config.toml
      state: absent

  - name: Start & enable Docker service
    ansible.builtin.service:
      name: docker
      state: started
      enabled: yes

  - name: Start & enable containerd service
    ansible.builtin.service:
      name: containerd
      state: started
      enabled: yes

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Disable IPtables
    command: iptables -F

  - name: Disable SELinux
    selinux:
      state: disabled

  - name: Add YUM repository for Kubernetes
    get_url: 
      url: https://raw.githubusercontent.com/flinty1970/Kubernetes_Lab/main/kubernetes.repo 
      dest: /etc/yum.repos.d/kubernetes.repo
      mode: 0755 
      owner: root
      group: root


  - name: Install Kubernetes
    yum: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet 
        - kubeadm 
        - kubectl

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted

  - name: disable firewall
    service:
      name: firewalld
      state: stopped
      enabled: false

  - name: Initialize the Kubernetes cluster using kubeadm command
    when: inventory_hostname in groups['k8s-master']
    #command: kubeadm init --apiserver-advertise-address="10.128.0.29" --pod-network-cidr=10.244.0.0/16
    shell: kubeadm init --pod-network-cidr=192.168.0.0/16
    args:
      chdir: $HOME


  - name: create .kube directory
    file:
      path: $HOME/.kube
      state: directory
      mode: 0755

  - name: copies admin.conf to user's kube config
    when: inventory_hostname in groups['k8s-master']
    copy:
      src: /etc/kubernetes/admin.conf
      dest: /home/kube/.kube/config
      remote_src: yes
      owner: root


#  - name: Install Flannel pod network
#    become: false
#    when: inventory_hostname in groups['k8s-master']
#    command: kubectl apply -f https://github.com/coreos/flannel/raw/master/Documentation/kube-flannel.yml

  - name: Install Flannel Calico network
    become: false
    when: inventory_hostname in groups['k8s-master']
    shell: kubectl apply -f https://docs.projectcalico.org/manifests/tigera-operator.yaml
    args:
      chdir: $HOME

  - name: Install Flannel Calico network 2
    become: false
    when: inventory_hostname in groups['k8s-master']
    shell: kubectl apply -f https://docs.projectcalico.org/manifests/custom-resources.yaml
    args:
      chdir: $HOME

  - name: StaticARP
    become: false
    when: inventory_hostname in groups['k8s-master']
    shell: 'kubectl get configmap kube-proxy -n kube-system -o yaml | sed -e "s/strictARP: false/strictARP: true/" | kubectl apply -f - -n kube-system'
    args:
      chdir: $HOME


  - name: Install MetalLB
    become: false
    when: inventory_hostname in groups['k8s-master']
    shell: kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.13.7/config/manifests/metallb-native.yaml
    args:
      chdir: $HOME



  - name: Configure MetalLB 1
    become: false
    when: inventory_hostname in groups['k8s-master']
    shell: kubectl apply -f kubectl create -f https://raw.githubusercontent.com/flinty1970/Kubernetes_Lab/main/metallb.yaml
    args:
      chdir: $HOME


  - name: Configure MetalLB 2
    become: false
    when: inventory_hostname in groups['k8s-master']
    command: kubectl apply -f kubectl create -f https://raw.githubusercontent.com/flinty1970/Kubernetes_Lab/main/metallb2.yaml
    args:
      chdir: $HOME


  - name: Retrieve Kubernetes join command that is used to join worker node(s)
    become: false
    when: inventory_hostname in groups['k8s-master']
    shell: kubeadm token create  --print-join-command
    register: kubernetes_join_command

  - debug:
      msg: "{{ kubernetes_join_command.stdout }}"

  - name: Attach kubeadm join command to a file on Ansible control node
    when: inventory_hostname in groups['k8s-master']
    #local_action: "copy content='{{ join_command.stdout_lines[0] }}' dest=join-command"
    local_action: 'copy content="{{ kubernetes_join_command.stdout_lines[0] }}" dest="/tmp/kubernetes_join_command" mode=0777'


  - name: Copy join command from Ansiblehost to the worker nodes.
    when: inventory_hostname in groups['k8s-worker']
    copy:
      src: /tmp/kubernetes_join_command
      dest: /tmp/kubernetes_join_command
      mode: 0777

  - name: Copy the join-command file created above to worker node
    when: inventory_hostname in groups['k8s-worker']
    copy: src=join-command dest=/tmp/kubeadm-join.sh mode=0777

  - name: Join the worker node to cluster
    when: inventory_hostname in groups['k8s-worker']
    command: sh /tmp/kubernetes_join_command
    register: joined_or_not


